Assignment â€“ 4
---------------------------------------------------------------------------------------------------------------------
1. Display tid,custid,customer name and buy_price.
mysql> select empno, ename, sal, job, emp.deptno, dept.dname from emp, dept where (emp.job='cleark'or job='salesman') and sal>1000;
+-------+--------+---------+----------+--------+------------+
| empno | ename  | sal     | job      | deptno | dname      |
+-------+--------+---------+----------+--------+------------+
|  7844 | TURNER | 1650.00 | SALESMAN |     30 | ACCOUNTING |
|  7654 | MARTIN | 1375.00 | SALESMAN |     30 | ACCOUNTING |
|  7521 | WARD   | 1375.00 | SALESMAN |     30 | ACCOUNTING |
|  7499 | ALLEN  | 1760.00 | SALESMAN |     30 | ACCOUNTING |
|  7844 | TURNER | 1650.00 | SALESMAN |     30 | RESEARCH   |
|  7654 | MARTIN | 1375.00 | SALESMAN |     30 | RESEARCH   |
|  7521 | WARD   | 1375.00 | SALESMAN |     30 | RESEARCH   |
|  7499 | ALLEN  | 1760.00 | SALESMAN |     30 | RESEARCH   |
|  7844 | TURNER | 1650.00 | SALESMAN |     30 | SALES      |
|  7654 | MARTIN | 1375.00 | SALESMAN |     30 | SALES      |
|  7521 | WARD   | 1375.00 | SALESMAN |     30 | SALES      |
|  7499 | ALLEN  | 1760.00 | SALESMAN |     30 | SALES      |
|  7844 | TURNER | 1650.00 | SALESMAN |     30 | OPERATIONS |
|  7654 | MARTIN | 1375.00 | SALESMAN |     30 | OPERATIONS |
|  7521 | WARD   | 1375.00 | SALESMAN |     30 | OPERATIONS |
|  7499 | ALLEN  | 1760.00 | SALESMAN |     30 | OPERATIONS |
+-------+--------+---------+----------+--------+------------+
16 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
2.Dispaly tid,custid,customer name,vid,vehicle name, sid, sname and buy_price for vehicle.

mysql> CREATE TABLE Customer (
    ->     custid INT PRIMARY KEY,
    ->     customer_name VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql> CREATE TABLE Transaction (
    ->     tid INT PRIMARY KEY,
    ->     custid INT,  -- foreign key
    ->     vid INT,
    ->     vehicle_name VARCHAR(100),
    ->     sid INT,
    ->     salesmen_name VARCHAR(100),
    ->     buy_price DECIMAL(10, 2),
    ->     FOREIGN KEY (custid) REFERENCES Customer(custid)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO Customer (custid, customer_name) VALUES
    -> (1, 'John Doe'),
    -> (2, 'Jane Smith'),
    -> (3, 'Mark Johnson');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Transaction (tid, custid, vid, vehicle_name, sid, salesmen_name, buy_price) VALUES
    -> (1, 1, 101, 'Sedan', 201, 'Alice', 25000.00),
    -> (2, 2, 102, 'SUV', 202, 'Bob', 35000.00),
    -> (3, 3, 103, 'Coupe', 203, 'Charlie', 30000.00);
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT 
    ->     t.tid,
    ->     t.custid,
    ->     c.customer_name,
    ->     t.vid,
    ->     t.vehicle_name,
    ->     t.sid,
    ->     t.salesmen_name,
    ->     t.buy_price
    -> FROM 
    ->     Transactions t, 
    ->     Customer c
    -> WHERE 
    ->     t.custid = c.custid;
+-----+--------+---------------+------+--------------+------+---------------+-----------+
| tid | custid | customer_name | vid  | vehicle_name | sid  | salesmen_name | buy_price |
+-----+--------+---------------+------+--------------+------+---------------+-----------+
|   1 |      1 | John Doe      |  101 | Sedan        |  201 | Alice         |  25000.00 |
|   2 |      2 | Jane Smith    |  102 | SUV          |  202 | Bob           |  35000.00 |
|   3 |      3 | Mark Johnson  |  103 | Coupe        |  203 | Charlie       |  30000.00 |
+-----+--------+---------------+------+--------------+------+---------------+-----------+
3 rows in set (0.01 sec)


--- Another Example ---

mysql> CREATE TABLE Transactions (
    ->     tid INT PRIMARY KEY,
    ->     custid INT,
    ->     customer_name VARCHAR(100),
    ->     vid INT,
    ->     vehicle_name VARCHAR(100),
    ->     sid INT,
    ->     salesmen_name VARCHAR(100),
    ->     buy_price DECIMAL(10, 2)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO Transactions (tid, custid, customer_name, vid, vehicle_name, sid, salesmen_name, buy_price) VALUES
    -> (1, 1, 'John Doe', 101, 'Sedan', 201, 'Alice', 25000.00),
    -> (2, 2, 'Jane Smith', 102, 'SUV', 202, 'Bob', 35000.00),
    -> (3, 3, 'Mark Johnson', 103, 'Coupe', 203, 'Charlie', 30000.00);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT 
    ->     tid,
    ->     custid,
    ->     customer_name,
    ->     vid,
    ->     vehicle_name,
    ->     sid,
    ->     salesmen_name,
    ->     buy_price
    -> FROM Transactions;
+-----+--------+---------------+------+--------------+------+---------------+-----------+
| tid | custid | customer_name | vid  | vehicle_name | sid  | salesmen_name | buy_price |
+-----+--------+---------------+------+--------------+------+---------------+-----------+
|   1 |      1 | John Doe      |  101 | Sedan        |  201 | Alice         |  25000.00 |
|   2 |      2 | Jane Smith    |  102 | SUV          |  202 | Bob           |  35000.00 |
|   3 |      3 | Mark Johnson  |  103 | Coupe        |  203 | Charlie       |  30000.00 |
+-----+--------+---------------+------+--------------+------+---------------+-----------+
3 rows in set (0.00 sec)

----------------------------------------------------------------------------------------------

1.List details of employees as ename,deptno,dname,sal,comm.
mysql> select ename, EMP.deptno, sal, comm, dname, DEPT.deptno from EMP, DEPT where EMP.deptno = DEPT.deptno;
+--------+--------+---------+---------+------------+--------+
| ename  | deptno | sal     | comm    | dname      | deptno |
+--------+--------+---------+---------+------------+--------+
| SMITH  |     20 |  801.05 |    NULL | RESEARCH   |     20 |
| ALLEN  |     30 | 1601.05 |  300.00 | SALES      |     30 |
| WARD   |     30 | 1251.05 |  500.00 | SALES      |     30 |
| JONES  |     20 | 2976.05 |    NULL | RESEARCH   |     20 |
| MARTIN |     30 | 1251.05 | 1400.00 | SALES      |     30 |
| BLAKE  |     30 | 2851.05 |    NULL | SALES      |     30 |
| CLARK  |     10 | 2451.05 |    NULL | ACCOUNTING |     10 |
| SCOTT  |     20 | 3001.05 |    NULL | RESEARCH   |     20 |
| KING   |     10 | 5001.05 |    NULL | ACCOUNTING |     10 |
| TURNER |     30 | 1501.05 |    0.00 | SALES      |     30 |
| ADAMS  |     20 | 1101.05 |    NULL | RESEARCH   |     20 |
| JAMES  |     30 |  951.05 |    NULL | SALES      |     30 |
| FORD   |     20 | 3001.05 |    NULL | RESEARCH   |     20 |
| MILLER |     10 | 1301.05 |    NULL | ACCOUNTING |     10 |
+--------+--------+---------+---------+------------+--------+
14 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
2. Display details of employees as empno,ename,sal,job, deptno and dept name for all employees
working as a clerk or salesman and earning more than 2000 .
mysql> select empno, ename, sal, job, emp.deptno, dept.dname from emp, dept where (emp.job='cleark'or job='salesman') and sal>1000 and emp.deptno= dept.deptno;
+-------+--------+---------+----------+--------+-------+
| empno | ename  | sal     | job      | deptno | dname |
+-------+--------+---------+----------+--------+-------+
|  7844 | TURNER | 1650.00 | SALESMAN |     30 | SALES |
|  7654 | MARTIN | 1375.00 | SALESMAN |     30 | SALES |
|  7521 | WARD   | 1375.00 | SALESMAN |     30 | SALES |
|  7499 | ALLEN  | 1760.00 | SALESMAN |     30 | SALES |
+-------+--------+---------+----------+--------+-------+
4 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
3. List details of employees as ename,deptno,dname,sal,comm working in dept 20 and 30 who did
not get any commission. 
mysql> select * from EMP;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  801.05 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1601.05 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1251.05 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2976.05 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1251.05 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2851.05 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2451.05 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3001.05 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5001.05 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1501.05 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1101.05 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  951.05 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3001.05 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1301.05 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+
14 rows in set (0.00 sec)

mysql> SELECT ename, EMP.deptno, sal, comm, dname 
    -> FROM EMP, DEPT 
    -> WHERE EMP.deptno = DEPT.deptno 
    -> AND (EMP.deptno = 20 OR EMP.deptno = 30) 
    -> AND EMP.comm IS NOT NULL 
    -> AND EMP.comm != 0;
+--------+--------+---------+---------+-------+
| ename  | deptno | sal     | comm    | dname |
+--------+--------+---------+---------+-------+
| ALLEN  |     30 | 1601.05 |  300.00 | SALES |
| WARD   |     30 | 1251.05 |  500.00 | SALES |
| MARTIN |     30 | 1251.05 | 1400.00 | SALES |
+--------+--------+---------+---------+-------+
3 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
4. Display ename,sal and grade of employee(use salgrade table).
mysql>  select distinct ename, sal, s.grade from EMP, SALGRADE s
        where sal between losal and hisal;
+--------+---------+-------+
| ename  | sal     | grade |
+--------+---------+-------+
| SMITH  |  880.00 |     1 |
| ALLEN  | 1760.00 |     3 |
| WARD   | 1375.00 |     2 |
| JONES  | 3272.50 |     5 |
| MARTIN | 1375.00 |     2 |
| BLAKE  | 3135.00 |     5 |
| CLARK  | 2695.00 |     4 |
| SCOTT  | 3300.00 |     5 |
| KING   | 5500.00 |     5 |
| TURNER | 1650.00 |     3 |
| ADAMS  | 1210.00 |     2 |
| JAMES  | 1045.00 |     1 |
| FORD   | 3300.00 |     5 |
| MILLER | 1430.00 |     3 |
+--------+---------+-------+
14 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
5. Display the information of department i.e deptno, dname and loc in which clerks are working.
mysql>  select dept.deptno, dname, loc from dept, emp where dept.deptno= emp.deptno and emp.job= 'clerk';
+--------+------------+----------+
| deptno | dname      | loc      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
+--------+------------+----------+
4 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
6. Try out all set operators as per the demo
mysql> select deptno from emp UNION select deptno from dept;
+--------+
| deptno |
+--------+
|     20 |
|     30 |
|     10 |
|     40 |
+--------+
4 rows in set (0.00 sec)

mysql> select deptno from emp intersect select deptno from dept;
+--------+
| deptno |
+--------+
|     20 |
|     30 |
|     10 |
+--------+
3 rows in set (0.00 sec)

mysql> select deptno, DNAME from DEPT UNION ALL select deptno, ENAME from EMP;
+--------+------------+
| deptno | DNAME      |
+--------+------------+
|     10 | ACCOUNTING |
|     20 | RESEARCH   |
|     30 | SALES      |
|     40 | OPERATIONS |
|     20 | SMITH      |
|     30 | ALLEN      |
|     30 | WARD       |
|     20 | JONES      |
|     30 | MARTIN     |
|     30 | BLAKE      |
|     10 | CLARK      |
|     20 | SCOTT      |
|     10 | KING       |
|     30 | TURNER     |
|     20 | ADAMS      |
|     30 | JAMES      |
|     20 | FORD       |
|     10 | MILLER     |
+--------+------------+
18 rows in set (0.00 sec)


mysql> select deptno from dept except select deptno from emp;
+--------+
| deptno |
+--------+
|     40 |
+--------+
1 row in set (0.00 sec)

--- Another Example ---
mysql> CREATE TABLE products (
    ->     product_id INT PRIMARY KEY,
    ->     product_name VARCHAR(100),
    ->     price DECIMAL(10, 2)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE discontinued_products (
    ->     product_id INT PRIMARY KEY,
    ->     product_name VARCHAR(100),
    ->     discontinued_date DATE
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> INSERT INTO products (product_id, product_name, price) VALUES
    -> (1, 'Laptop', 1000.00),
    -> (2, 'Smartphone', 500.00),
    -> (3, 'Headphones', 100.00),
    -> (4, 'Mouse', 25.00),
    -> (5, 'Keyboard', 50.00);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO discontinued_products (product_id, product_name, discontinued_date) VALUES
    -> (3, 'Headphones', '2025-01-01'),
    -> (4, 'Mouse', '2025-02-01');
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT product_id, product_name, price FROM products
    -> UNION
    -> SELECT product_id, product_name, NULL AS price FROM discontinued_products;
+------------+--------------+---------+
| product_id | product_name | price   |
+------------+--------------+---------+
|          1 | Laptop       | 1000.00 |
|          2 | Smartphone   |  500.00 |
|          3 | Headphones   |  100.00 |
|          4 | Mouse        |   25.00 |
|          5 | Keyboard     |   50.00 |
|          3 | Headphones   |    NULL |
|          4 | Mouse        |    NULL |
+------------+--------------+---------+
7 rows in set (0.00 sec)

mysql> SELECT product_id, product_name, price FROM products
    ->     INTERSECT
    ->     SELECT product_id, product_name, NULL AS price FROM discontinued_products;
Empty set (0.01 sec)

mysql> SELECT p.product_id, p.product_name, p.price
    -> FROM products p
    -> INNER JOIN discontinued_products d
    -> ON p.product_id = d.product_id AND p.product_name = d.product_name;
+------------+--------------+---------+
| product_id | product_name | price   |
+------------+--------------+---------+
|          1 | Laptop       | 1000.00 |
|          3 | Headphones   |  100.00 |
|          4 | Mouse        |   25.00 |
|          6 | Tablet       |  350.00 |
+------------+--------------+---------+
4 rows in set (0.00 sec)

mysql> SELECT product_id, product_name, price FROM products
    -> EXCEPT
    -> SELECT product_id, product_name, NULL AS price FROM discontinued_products;
+------------+--------------+---------+
| product_id | product_name | price   |
+------------+--------------+---------+
|          1 | Laptop       | 1000.00 |
|          2 | Smartphone   |  500.00 |
|          3 | Headphones   |  100.00 |
|          4 | Mouse        |   25.00 |
|          5 | Keyboard     |   50.00 |
+------------+--------------+---------+
5 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
7. Try out on delete set null/cascade
On update set null/cascade

mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| custid   | int         | YES  |     | NULL    |       |
| cname    | varchar(15) | YES  |     | NULL    |       |
| location | varchar(12) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.02 sec)

mysql> CREATE TABLE Orders(
    ->     order_id INT PRIMARY KEY,
    ->     cust_id INT,
    ->     order_date DATE,
    ->     Foreign Key (cust_id) References customer(custid)
    ->     ON DELETE Cascade
    ->     ON UPDATE Cascade
    -> );
ERROR 1822 (HY000): Failed to add the foreign key constraint. Missing index for constraint 'Orders_ibfk_1' in the referenced table 'customer'

mysql> ALTER TABLE customer
    -> ADD PRIMARY KEY(custid);
Query OK, 0 rows affected (0.09 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> DESC customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| custid   | int         | NO   | PRI | NULL    |       |
| cname    | varchar(15) | YES  |     | NULL    |       |
| location | varchar(12) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

-- CASCADE
mysql> CREATE TABLE Orders(
    ->     order_id INT PRIMARY KEY,
    ->     cust_id INT,
    ->     order_date DATE,
    ->     Foreign Key (cust_id) References customer(custid)
    ->     ON DELETE Cascade
    ->     ON UPDATE Cascade
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> DESC Orders;
+------------+------+------+-----+---------+-------+
| Field      | Type | Null | Key | Default | Extra |
+------------+------+------+-----+---------+-------+
| order_id   | int  | NO   | PRI | NULL    |       |
| cust_id    | int  | YES  | MUL | NULL    |       |
| order_date | date | YES  |     | NULL    |       |
+------------+------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> INSERT INTO Orders values
    -> (7, 7, '2025-03-07'),
    -> (8, 3, '2025-03-08'),
    -> (9, 6, '2025-03-09'),
    -> (10,7, '2025-03-10');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        7 |       7 | 2025-03-07 |
|        8 |       3 | 2025-03-08 |
|        9 |       6 | 2025-03-09 |
|       10 |       7 | 2025-03-10 |
+----------+---------+------------+
4 rows in set (0.00 sec)

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      3 | Kishor | Kothrud  |
|      6 | Raj    | Aundh    |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
4 rows in set (0.00 sec)

-- Trying deleting a row with custid=6
mysql> DELETE FROM customer WHERE custid = 6;
Query OK, 1 row affected (0.00 sec)

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      3 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        7 |       7 | 2025-03-07 |
|        8 |       3 | 2025-03-08 |
|       10 |       7 | 2025-03-10 |
+----------+---------+------------+
3 rows in set (0.00 sec)

mysql> UPDATE customer SET custid=4 where custid=3;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      4 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        7 |       7 | 2025-03-07 |
|        8 |       4 | 2025-03-08 |
|       10 |       7 | 2025-03-10 |
+----------+---------+------------+
3 rows in set (0.00 sec)

mysql> ALTER TABLE Orders
    -> ADD CONSTRAINT fk_cust FOREIGN KEY(cust_id) REFERENCES customer(custid)
    -> ON UPDATE SET NULL
    -> ON DELETE SET NULL;
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> DESC Orders;
+------------+------+------+-----+---------+-------+
| Field      | Type | Null | Key | Default | Extra |
+------------+------+------+-----+---------+-------+
| order_id   | int  | NO   | PRI | NULL    |       |
| cust_id    | int  | YES  | MUL | NULL    |       |
| order_date | date | YES  |     | NULL    |       |
+------------+------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> UPDATE customer SET custid=3 where custid=4;
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`CDAC_ACTS`.`Orders`, CONSTRAINT `fk_cust` FOREIGN KEY (`cust_id`) REFERENCES `customer` (`custid`) ON DELETE SET NULL ON UPDATE SET NULL)
ERROR: 
No query specified

mysql> SHOW CREATE TABLE Orders;
+--------+----------------------------------------------------------------------------------------------------------------+
| Table  | Create Table                                                                                                                             |
+--------+----------------------------------------------------------------------------------------------------------------+
| Orders | CREATE TABLE `Orders` (
  `order_id` int NOT NULL,
  `cust_id` int DEFAULT NULL,
  `order_date` date DEFAULT NULL,
  PRIMARY KEY (`order_id`),
  KEY `fk_cust` (`cust_id`),
  CONSTRAINT `fk_cust` FOREIGN KEY (`cust_id`) REFERENCES `customer` (`custid`) ON DELETE SET NULL ON UPDATE SET NULL,
  CONSTRAINT `Orders_ibfk_1` FOREIGN KEY (`cust_id`) REFERENCES `customer` (`custid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci |
+--------+---------------------------------------------------------------------------------------------------------------+

mysql> ALTER TABLE Orders DROP FOREIGN KEY Orders_ibfk_1;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> UPDATE customer SET custid=3 where custid=4;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      3 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        7 |       7 | 2025-03-07 |
|        8 |    NULL | 2025-03-08 |
|       10 |       7 | 2025-03-10 |
+----------+---------+------------+
3 rows in set (0.00 sec)

mysql> ALTER TABLE Orders DROP FOREIGN KEY fk_cust;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE Orders
    -> ADD CONSTRAINT fk_cust FOREIGN KEY (cust_id) REFERENCES customer(custid)
    -> ON DELETE RESTRICT
    -> ON UPDATE RESTRICT;
Query OK, 3 rows affected (0.04 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> UPDATE customer SET custid=6 where custid=3;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      6 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        7 |       7 | 2025-03-07 |
|        8 |    NULL | 2025-03-08 |
|       10 |       7 | 2025-03-10 |
+----------+---------+------------+
3 rows in set (0.00 sec)

-- Expected Behaviour
mysql> UPDATE customer SET custid=11 where custid=7;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`CDAC_ACTS`.`Orders`, CONSTRAINT `fk_cust` FOREIGN KEY (`cust_id`) REFERENCES `customer` (`custid`) ON DELETE RESTRICT ON UPDATE RESTRICT)

mysql> DELETE FROM Orders WHERE cust_id = 7;
Query OK, 2 rows affected (0.00 sec)

mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      6 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        8 |    NULL | 2025-03-08 |
+----------+---------+------------+
1 row in set (0.00 sec)

mysql> INSERT INTO Orders (order_id, cust_id, order_date)
    -> VALUES (12, 2, '2025-03-22');
Query OK, 1 row affected (0.00 sec)

mysql> -- Insert order for cust_id = 6
Query OK, 0 rows affected (0.00 sec)

mysql> INSERT INTO Orders (order_id, cust_id, order_date)
    -> VALUES (13, 6, '2025-03-23');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Orders (order_id, cust_id, order_date)
    -> VALUES (11, 7, '2025-03-15');
Query OK, 1 row affected (0.00 sec)

mysql> DELETE FROM customer WHERE custid = 6;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`CDAC_ACTS`.`Orders`, CONSTRAINT `fk_cust` FOREIGN KEY (`cust_id`) REFERENCES `customer` (`custid`) ON DELETE RESTRICT ON UPDATE RESTRICT)
mysql> SELECT * FROM customer;
+--------+--------+----------+
| custid | cname  | location |
+--------+--------+----------+
|      2 | Ganesh | Pune     |
|      6 | Kishor | Kothrud  |
|      7 | Yash   | Aundh    |
+--------+--------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Orders;
+----------+---------+------------+
| order_id | cust_id | order_date |
+----------+---------+------------+
|        8 |    NULL | 2025-03-08 |
|       11 |       7 | 2025-03-15 |
|       12 |       2 | 2025-03-22 |
|       13 |       6 | 2025-03-23 |
+----------+---------+------------+
4 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------------
8. Try all the constraints
-- demo table with various constraints
mysql> CREATE TABLE demo_table (
    ->     demo_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     username VARCHAR(50) NOT NULL UNIQUE,
    ->     email VARCHAR(100) UNIQUE,
    ->     age INT CHECK (age >= 18 AND age <= 100),
    ->     gender ENUM('Male', 'Female', 'Other') NOT NULL,
    ->     customer_id INT,
    ->     registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    ->     FOREIGN KEY (customer_id) REFERENCES customer(custid) ON DELETE CASCADE ON UPDATE CASCADE  
    -> );
Query OK, 0 rows affected (0.03 sec)

Query OK, 0 rows affected (0.00 sec)

mysql> INSERT INTO demo_table (username, email, age, gender, customer_id)
    -> VALUES ('alice_smith', 'alice.smith@example.com', 25, 'Female', 2);
Query OK, 1 row affected (0.00 sec)

